import { fonts } from '@oe/themes';

import '@oe/core/global.css';
import type { Metadata } from 'next';
// import localFont from 'next/font/local';

import { Provider } from '@oe/ui/common/providers';
import { WebViewHandler } from '@oe/ui/components/webview-handler';
import { Toaster } from '@oe/ui/shadcn/sonner';
import { getLocale, getMessages } from 'next-intl/server';
import type { ReactNode } from 'react';

// const geistSans = localFont({
//   src: './fonts/GeistVF.woff',
//   variable: '--font-geist-sans',
//   weight: '100 900',
// });
// const geistMono = localFont({
//   src: './fonts/GeistMonoVF.woff',
//   variable: '--font-geist-mono',
//   weight: '100 900',
// });

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: ReactNode;
}>) {
  const [locale, messages] = await Promise.all([getLocale(), getMessages()]);

  const fontVariables = Object.values(fonts)
    .map(font => font.variable)
    .join(' ');

  return (
    <html lang={locale ?? 'en'} suppressHydrationWarning className={fontVariables}>
      <body className="scrollbar font-primary antialiased">
        <Provider messages={messages ?? {}} locale={locale}>
          <WebViewHandler />
          {children}
          <Toaster />
        </Provider>
      </body>
    </html>
  );
}
