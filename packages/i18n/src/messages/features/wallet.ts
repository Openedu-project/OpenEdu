export const walletMessages = {
  wallets: {
    title: 'Wallet Overview',
    deposit: 'Deposit',
    withdraw: 'Withdraw',
    requestWithdraw: 'Request Withdraw',
    history: 'History',
    bankAccounts: 'Bank Accounts',
    network: 'Network',
    enterNetwork: 'Enter Network',
    token: 'Token',
    totalAssetCard: 'Estimated Value',
    estimatedEarning: 'Estimated Earning',
    nftAssets: 'NFT Assets',
    points: 'Points',
    typeOfCurrency: 'Type Of Currency',
    amount: 'Amount',
    enterAmount: 'Enter Amount',
    value: 'Value ({currency})',
    action: 'Action',
    hideAsset1usd: 'Hide Asset < {currency}',
    noData: 'There is no data to show.',
    address: 'Address',
    noAddress: 'No address available',
    fetchFailed: 'Failed to load data. Please try again later.',
    addressCopied: 'Address copied to clipboard',
    networks: {
      title: 'Networks',
      description: 'View your connected blockchain networks and addresses.',
    },
    depositPage: {
      title: 'Token Deposit',
      see: 'See ',
      amountInWallet: ' Amount In Wallet',
      inforPopover: 'Currently, the platform only supports token deposits via crypto networks.',
      supportToken: 'Supported Tokens:',
      otherTokenNotSupport: 'Other tokens will not be supported.',
      caution: 'Caution:',
      alwaysDoubleCheck:
        'Always double-check the deposit address before sending. Transactions on the blockchain are irreversible.',
      viewTxns: 'View Txns on Explorer',
      chooseNetwork: 'Choose Network',
      ensureNetwork:
        'Ensure the network you choose to deposit matches the withdrawal network, otherwise your assets may be lost.',
    },
    status: {
      pending: 'Pending',
      success: 'Success',
      failed: 'Failed',
      new: 'New',
      cancelled: 'Cancelled',
      rejected: 'Rejected',
      approved: 'Approved',
    },
    type: {
      withdraw: 'Withdraw',
      claim: 'Claim',
      claim_earning: 'Claim Earning',
      retroactive: 'Retroactive',
      init_launchpad_pool: 'Init Launchpad Pool',
      pledge_launchpad: 'Pledge Launchpad',
      use_point: 'Use Point',
      sale: 'Sale',
      referral: 'Referral',
      buy: 'Buy',
      deposit_sponsor_gas: 'Deposit Sponsor Gas',
      withdraw_sponsor_gas: 'Withdraw Sponsor Gas',
      wallet_fiat_withdrawal: 'Fiat Withdrawal',
      launchpad_profit_earn: "Share of Launchpad's Profit",
      launchpad_revenue: 'Revenue',
    },
    withdrawPage: {
      title: 'Withdraw',
      form: {
        network: 'Network',
        address: 'Address',
        selectToken: 'Select token',
        selectFiatType: 'Select fiat type',
        fiatType: 'Currency',
        enterAmount: 'Enter amount',
        amount: 'Amount',
        available: 'Available: ',
        enterWithdrawAddr: 'Enter withdrawal address',
        token: 'Token',
        fiat: 'Fiat',
        bankAccount: 'Bank Account',
        selectBankAccount: 'Select bank account',
        selectNetwork: 'Select network',
        enterWithdrawNote: 'Enter withdrawal note',
        requestSuccess: 'Withdrawal request sent successfully',
        tokenSuccess: 'Token withdrawal sent successfully',
        errors: {
          bankAccountEmpty: "You don't have any bank accounts. Please add one.",
          amountMustBe: 'Amount must be at least ',
          amountExceedsBalance: 'Amount exceeds available balance',
          requiredAmount: 'Amount is required',
          invalidAmount: 'Invalid amount',
          positiveAmount: 'Amount must be greater than 0',
          requiredAddress: 'Address is required',
          invalidAddress: 'Invalid address',
          requiredFiatType: 'Currency is required',
          invalidCurrency: 'Invalid currency',
          invalidWallet: 'Invalid wallet chosen',
          unexpectedErr: 'An unexpected error occurred',
          requiredToken: 'Token is required',
          requiredBankAccount: 'Bank account is required',
          isRequired: 'This field is required',
          minVNDAmount: 'Minimum withdrawal amount is 20,000 VND',
        },
      },
      button: {
        cancel: 'Cancel',
        submit: 'Submit',
        confirm: 'Confirm',
        deposit: 'Deposit',
        close: 'Close',
        viewHistory: 'View History',
        max: 'Max',
        addNewBankAccount: 'Add New Bank Account',
      },
      withdrawStatus: {
        submit: {
          title: 'Confirm To Withdraw',
          notice: "You're about to withdraw ",
          fiatNotice: 'Please confirm to send request for admin to approve your withdrawal.',
          cryptoToAddress: ' to address ',
          cryptoNotice: 'Please double check the receiving address, as these changes cannot be undone.',
        },
        success: {
          title: 'Withdrawal Successful',
          desc: 'Your withdrawal request has been successful!',
        },
        outOfGas: {
          title: 'Not Enough Gas Fee',
          desc: 'You do not have enough NEAR balance to cover the gas fee. Please deposit more to withdraw tokens.',
        },
      },
      modal: {
        fiatTitle: 'Withdrawal Request',
        fiatDesc:
          "You're about to request to withdraw {amount}. Please confirm to send request for admin to approve your withdrawal.",
        cryptoTitle: 'Confirm To Withdraw',
        cryptoDesc: "You're about to withdraw {amount} {token}. Please confirm before action.",
      },
    },
    historyPage: {
      title: 'Wallet History',
      desc: 'These are transactions that are only visible when you interact with the OpenEdu platform.',
      token: 'Token',
      fiat: 'Fiat',
      fiat_request_withdraw: 'Fiat Request Withdraw',
      transactions: 'Transactions',
      note: 'Note',
      requestWithdraw: 'Request For Withdraw',
      network: 'Network',
      transactionDetails: 'Transaction Details',
      table: {
        date: 'Date',
        currency: 'Currency',
        typeOfAction: 'Type',
        amount: 'Amount',
        status: 'Status',
        image: 'Image',
        txHash: 'Transaction Hash',
        historyDetails: 'History Details',
        processing: 'Processing',
        actions: 'Actions',
        details: 'Details',
        evidence: 'Evidence',
      },
    },
    bankAccountPage: {
      bankAccounts: 'Bank Accounts',
      addNewBankAccount: 'Add New Bank Account',
      form: {
        errors: {
          bankName: {
            required: 'Bank name is required',
            invalid: 'Please enter a valid bank name (less than 100 characters)',
          },
          accountName: {
            required: 'Account name is required',
            invalid: 'Please enter a valid account name (less than 100 characters)',
          },
          accountNumber: {
            required: 'Account number is required',
            invalid: 'Account number must be between 5-20 digits',
            pattern: 'Account number must contain only numbers',
            duplicate: 'This account number already exists',
          },
        },
        formLabels: {
          bankName: 'Bank Name',
          accountName: 'Account Name',
          accountNumber: 'Account Number',
          isDefault: 'Set as default',
        },
        placeholders: {
          bankName: 'Enter bank name',
          accountName: 'Enter account name',
          accountNumber: 'Enter account number (5-20 digits)',
        },
        alertMessage: 'Please check the correct information. We are not responsible for any errors after submission',
        submitButton: 'Submit',
        cancelButton: 'Cancel',
      },
      messages: {
        addSuccess: 'Bank account added successfully',
        updateSuccess: 'Bank account updated successfully',
        deleteSuccess: 'Bank account deleted successfully',
        addFailure: 'Failed to add bank account',
        updateFailure: 'Failed to update bank account',
        deleteFailure: 'Failed to delete bank account',
      },
      dialog: {
        addNewTitle: 'Add New Bank Account',
        updateTitle: 'Update Your Bank Account',
        addNewDescription: 'Please fill in the details to add a new bank account.',
        updateDescription: 'Please fill in the details to update bank account.',
        deleteTitle: 'Delete Bank Account',
        deleteDescription: 'Are you sure you want to delete this bank account?',
      },
      table: {
        bankName: 'Bank Name',
        accountName: 'Account Name',
        accountNumber: 'Account Number',
        action: 'Action',
        editButton: 'Edit',
        deleteButton: 'Delete',
      },
    },
    earningPage: {
      title: 'Earning Assets',
      loading: 'Loading...',
      claimButton: 'Claim',
      createdAt: 'Date',
      type: 'Type',
      amount: 'Amount',
      transactionHash: 'Transaction Hash',
      token: 'Token',
      time: 'Time',
      status: 'Status',
      outOfGasTitle: 'Out of Gas Fee',
      outOfGasDescription:
        'Your NEAR balance is less than or equal to 0.2, which is insufficient to cover the gas fee for this transaction. Please deposit to continue.',
      cancelBtn: 'Cancel',
      depositBtn: 'Deposit',
      transactionHistory: 'Transaction History',
      earnings: 'Earnings',
      claimSuccess: 'Tokens claimed successfully!',
      claimFailed: 'Failed to claim token',
    },
    nftPage: {
      title: 'NFTs',
      detail: {
        chain: 'Chain',
        description: 'Description',
        tokenId: 'Token ID',
        nearLink: 'View on NEAR Explorer',
      },
      header: 'NFT Assets',
      loading: 'Loading...',
      error: 'An error occurred while fetching NFT data.',
      empty: 'No NFTs available.',
    },
    currency: {
      title: 'Currency',
      usd: 'USD',
      vnd: 'VND',
      near: 'Near Protocol',
      eth: 'Ethereum',
      avail: 'Avail',
      usdc: 'USDC',
      usdt: 'USDT',
    },
  },
};
