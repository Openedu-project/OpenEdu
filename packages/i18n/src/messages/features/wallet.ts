export const walletMessages = {
  walletPage: {
    title: 'Wallet',
    deposit: 'Deposit',
    withdraw: 'Withdraw',
    requestWithdraw: 'Request Withdraw',
    history: 'History',
    bankAccounts: 'Bank Accounts',
    network: 'Network',
    networks: 'Networks',
    currency: 'Currency',
    totalAssetCard: 'Estimated Value',
    estimatedEarning: 'Estimated Earning',
    nftAssets: 'NFT Assets',
    points: 'Points',
    typeOfCurrency: 'Type Of Currency',
    amount: 'Amount',
    value: 'Value',
    action: 'Action',
    hideAsset1usd: 'Hide Asset < 1 USD',
    noData: 'There is no data to show.',
    address: 'Address',
    noAddress: 'No address available',
    fetchFailed: 'Failed to load data. Please try again later.',
  },
  networkDialog: {
    title: 'Networks',
    description: 'View your connected blockchain networks and addresses.',
  },
  depositPage: {
    title: 'Token Deposit',
    see: 'See ',
    amountInWallet: ' Amount In Wallet',
    inforPopover: 'Currently, the platform only supports token deposits via crypto networks.',
    supportToken: 'Supported Tokens:',
    otherTokenNotSupport: 'Other tokens will not be supported.',
    caution: 'Caution:',
    alwaysDoubleCheck:
      'Always double-check the deposit address before sending. Transactions on the blockchain are irreversible.',
    viewTxns: 'View Txns on Explorer',
    chooseNetwork: 'Choose Network',
    ensureNetwork:
      'Ensure the network you choose to deposit matches the withdrawal network, otherwise your assets may be lost.',
  },
  withdrawPage: {
    title: 'Withdraw',
    form: {
      network: 'Network',
      address: 'Address',
      selectToken: 'Select token',
      selectFiatType: 'Select fiat type',
      fiatType: 'Currency',
      enterAmount: 'Enter amount',
      amount: 'Amount',
      available: 'Available: ',
      enterWithdrawAddr: 'Enter withdrawal address',
      token: 'Token',
      bankAccount: 'Bank Account',
      selectBankAccount: 'Select bank account',
      selectNetwork: 'Select network',
      enterWithdrawNote: 'Enter withdrawal note',
      errors: {
        bankAccountEmpty: "You don't have any bank accounts. Please add one.",
        amountMustBe: 'Amount must be at least ',
        amountExceedsBalance: 'Amount exceeds available balance',
        requiredAmount: 'Amount is required',
        invalidAmount: 'Invalid amount',
        positiveAmount: 'Amount must be greater than 0',
        requiredAddress: 'Address is required',
        invalidAddress: 'Invalid address',
        requiredFiatType: 'Currency is required',
        invalidCurrency: 'Invalid currency',
        invalidWallet: 'Invalid wallet chosen',
        unexpectedErr: 'An unexpected error occurred',
      },
    },
    btn: {
      cancel: 'Cancel',
      submit: 'Submit',
      deposit: 'Deposit',
      close: 'Close',
      viewHistory: 'View History',
      max: 'Max',
      addNewBankAccount: '+ Add New Bank Account',
    },
    withdrawStatus: {
      submit: {
        title: 'Confirm To Withdraw',
        notice: "You're about to withdraw ",
        fiatNotice: 'Please confirm to send request for admin to approve your withdrawal.',
        cryptoToAddress: ' to address ',
        cryptoNotice: 'Please double check the receiving address, as these changes cannot be undone.',
      },
      success: {
        title: 'Withdrawal Successful',
        desc: 'Your withdrawal request has been successful!',
      },
      outOfGas: {
        title: 'Not Enough Gas Fee',
        desc: 'You do not have enough NEAR balance to cover the gas fee. Please deposit more to withdraw tokens.',
      },
    },
  },
  historyPage: {
    title: 'Wallet History',
    desc: 'These are transactions that are only visible when you interact with the OpenEdu platform.',
    token: 'Token',
    fiat: 'Fiat',
    transactions: 'Transactions',
    requestWithdraw: 'Request For Withdraw',
    table: {
      date: 'Date',
      currency: 'Currency',
      type: 'Type',
      amount: 'Amount',
      status: 'Status',
      image: 'Image',
      note: 'Note',
      network: 'Network',
      txHash: 'Transaction Hash',
      historyDetails: 'History Details',
      processing: 'Processing',
    },
  },
  bankAccountPage: {
    bankAccounts: 'Bank Accounts',
    addNewBtn: '+ Add New Bank Account',
    form: {
      errors: {
        bankNameRequired: 'Bank name is required and must be less than 100 characters',
        accountNameRequired: 'Account name is required and must be less than 100 characters',
        accountNumberRequired: 'Account number is required, must contain only numbers, and be between 5 to 20 digits',
      },
      formLabels: {
        bankName: 'Bank Name',
        accountName: 'Account Name',
        accountNumber: 'Account Number',
      },
      placeholders: {
        bankName: 'Enter bank name',
        accountName: 'Enter account name',
        accountNumber: 'Enter account number (5-20 digits)',
      },
      alertMessage: 'Please check the correct information. We are not responsible for any errors after submission',
      submitButton: 'Submit',
    },
    messages: {
      addSuccess: 'Bank account added successfully',
      updateSuccess: 'Bank account updated successfully',
      deleteSuccess: 'Bank account deleted successfully',
      addFailure: 'Failed to add bank account',
      updateFailure: 'Failed to update bank account',
      deleteFailure: 'Failed to delete bank account',
    },
    dialog: {
      addNewTitle: 'Add New Bank Account',
      updateTitle: 'Update Your Bank Account',
      addNewDescription: 'Please fill in the details to add a new bank account.',
      updateDescription: 'Please fill in the details to update bank account.',
    },
    table: {
      bankName: 'Bank Name',
      accountName: 'Account Name',
      accountNumber: 'Account Number',
      action: 'Action',
      editButton: 'Edit',
      deleteButton: 'Delete',
    },
  },
  earnPage: {
    loading: 'Loading...',
    claimBtn: 'Claim',
    date: 'Date',
    type: 'Type',
    amount: 'Amount',
    transactionHash: 'Transaction Hash',
    token: 'Token',
    time: 'Time',
    status: 'Status',
    outOfGasTitle: 'Out of Gas Fee',
    outOfGasDescription:
      'Your NEAR balance is less than or equal to 0.2, which is insufficient to cover the gas fee for this transaction. Please deposit to continue.',
    cancelBtn: 'Cancel',
    depositBtn: 'Deposit',
    transactionHistory: 'Transaction History',
    earnings: 'Earnings',
    claimSuccess: 'Tokens claimed successfully!',
    claimFailed: 'Failed to claim token',
  },
  nftPage: {
    detail: {
      chain: 'Chain',
      description: 'Description',
      tokenId: 'Token ID',
      nearLink: 'View on NEAR Explorer',
    },
    header: 'NFT Assets',
    loading: 'Loading...',
    error: 'An error occurred while fetching NFT data.',
    empty: 'No NFTs available.',
  },
};
