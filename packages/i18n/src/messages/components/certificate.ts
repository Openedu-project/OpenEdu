export const certificateMessages = {
  certificate: {
    completedOn: 'Completed on',
    copied: 'Copied',
    shareThisPage: 'Share this page',
    backToUserProfile: 'Back to user profile',
    actions: {
      edit: 'Edit',
      delete: 'Delete',
      create: 'Create',
      cancel: 'Cancel',
    },
    list: {
      title: 'Certificates',
      name: 'Name',
      preview: 'Preview',
      updatedAt: 'Updated At',
      actions: 'Actions',
      isDefault: 'Default',
      enable: 'Enable',
    },
    toast: {
      createSuccess: 'Create certificate successfully',
      createError: 'Create certificate failed',
      deleteSuccess: 'Delete certificate successfully',
      deleteError: 'Delete certificate failed',
      saveSuccess: 'Certificate template saved successfully',
      saveError: 'Failed to save certificate template',
    },
    modal: {
      create: {
        title: 'Create Certificate',
        name: 'Name',
      },
      delete: {
        title: 'Delete Certificate',
        description: 'Are you sure you want to delete this certificate?',
      },
    },
    validation: {
      name: 'Name is required',
    },
    builder: {
      addText: 'Add Text',
      addImage: 'Add Image',
      addRichText: 'Add Rich Text',
      addSignature: 'Add Signature',
      addOrganizations: 'Add Organizations',
      save: 'Save',
      saving: 'Saving...',
      selectElement: 'Select an element to edit',
      warning:
        'Please set up the frame before starting to create a certificate template to avoid data loss when making adjustments later. After completing the certificate configuration, remember to save the template before making any changes to the frame to ensure your data is preserved.',
      tabs: {
        frame: 'Frame',
        element: 'Element',
        layers: 'Layers',
      },
      grid: {
        showGrid: 'Show Grid',
        snapToGrid: 'Snap to Grid',
      },
      name: {
        title: 'Template Name',
        placeholder: 'Enter template name',
      },
      frame: {
        title: 'Frame',
        background: {
          title: 'Frame',
          color: 'Frame Color',
          image: 'Frame Image',
          preview: 'Frame Preview',
        },
        grid: {
          title: 'Grid Settings',
          showGrid: 'Show Grid',
          snapToGrid: 'Snap to Grid',
        },
      },
      preview: {
        title: 'Certificate Preview',
        download: 'Export PDF',
        cancel: 'Cancel',
        downloadError: 'Failed to download PDF',
        sampleData: 'Sample Data',
        studentName: 'Student Name',
        courseName: 'Course Name',
        issueDate: 'Issue Date',
        organizationName: 'Organization Name',
        educatorName: 'Educator Name',
        signature: 'Signature',
        addOrganization: 'Add Organization',
        addSignature: 'Add Signature',
        remove: 'Remove',
        organization: 'Organization',
        signatures: 'Signatures',
        organizationLogo: 'Organization Logo',
        signerName: 'Signer Name',
        signerPosition: 'Signer Position',
        organizations: 'Organizations',
      },
      elements: {
        title: 'Elements',
        text: {
          title: 'Text',
          elementTitle: 'Text Element',
        },
        image: {
          title: 'Image',
          elementTitle: 'Image Element',
        },
        signature: {
          title: 'Signature',
          elementTitle: 'Signature Element',
          educatorName: 'Educator Name',
          position: 'Position',
          placeholder: '{organizationName} platform educator',
        },
        richText: {
          title: 'Rich Text',
          elementTitle: 'Rich Text Element',
        },
        organization: {
          title: 'Organization',
          elementTitle: 'Organization Element',
          logo: 'Logo',
          name: 'Name',
        },
      },
      settings: {
        title: 'Settings',
        position: 'Position',
        configure: 'Configure',
        content: 'Content',
        contentInfo: 'There are 3 dynamic data supported: {learner_name}, {course_name}, {issue_date}.',
        enterContent: 'Enter content here...',
        text: 'Text',
        fontSize: 'Font Size',
        fontWeight: 'Font Style',
        fontColor: 'Font Color',
        fontFamily: 'Font Family',
        font: 'Font',
        style: 'Style',
        appearance: 'Appearance',
        dynamic: 'Dynamic',
        studentName: 'Student Name',
        courseName: 'Course Name',
        issueDate: 'Issue Date',
        image: 'Image',
        logo: 'Logo',
        organization: 'Organization',
        organizationInfo:
          'When you select this option, the image will be replaced with the organization logo input from educator',
        dynamicInfo:
          'This element is dynamic data, for example, student name, course name, issue date, ... then when you select this option, the data will be replaced by dynamic data from the system. If you do not select this option, the data will not be replaced.',
        uploadImage: 'Upload Image',
        width: 'Width',
        height: 'Height',
        maintainAspectRatio: 'Maintain Aspect Ratio',
        alignment: 'Text Alignment',
        elementAlignment: 'Element Alignment',
        richText: 'Rich Text',
        bold: 'Bold',
        italic: 'Italic',
        underline: 'Underline',
        delete: 'Delete',
        move: 'Move',
        display: 'Display',
        horizontal: 'Horizontal',
        vertical: 'Vertical',
        showName: 'Show Name',
        logoDimensions: 'Logo Dimensions',
        nameStyles: 'Name Styles',
        signatureStyles: 'Signature Styles',
        positionTextStyles: 'Position Text Styles',
        lineStyles: 'Line Styles',
        lineHeight: 'Line Height',
        lineColor: 'Line Color',
        align: 'Align',
        left: 'Left',
        right: 'Right',
        top: 'Top',
        bottom: 'Bottom',
        topLeft: 'Top Left',
        topRight: 'Top Right',
        bottomLeft: 'Bottom Left',
        bottomRight: 'Bottom Right',
      },
      layers: {
        title: 'Layers',
        moveUp: 'Move Up',
        moveDown: 'Move Down',
        visible: 'Visible',
        hidden: 'Hidden',
        empty: 'No elements added yet',
      },
    },
  },
};
